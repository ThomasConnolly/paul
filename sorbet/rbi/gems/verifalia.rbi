# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/verifalia/all/verifalia.rbi
#
# verifalia-2.1.0

module Verifalia
end
module Verifalia::Rest
end
class Verifalia::Rest::Client
  def initialize(authenticator, user_agent, base_urls); end
  def invoke(method, resource, options = nil); end
  def logger=(arg0); end
end
class Verifalia::Client
  def credits; end
  def email_validations; end
  def initialize(authenticator: nil, username: nil, password: nil, ssl_client_cert: nil, ssl_client_key: nil, base_urls: nil, logger: nil); end
end
module Verifalia::Credits
end
class Verifalia::Credits::Balance
  def credit_packs; end
  def free_credits; end
  def free_credits_reset_in; end
  def initialize(credit_packs, free_credits, free_credits_reset_in); end
  def self.from_json(data); end
end
class Verifalia::Credits::Client
  def get_balance; end
  def initialize(rest_client); end
end
module Verifalia::EmailValidations
end
class Verifalia::EmailValidations::Job
  def entries; end
  def initialize(overview, entries); end
  def overview; end
  def self.from_json(data); end
end
class Verifalia::EmailValidations::Overview
  def client_ip; end
  def completed_on; end
  def created_on; end
  def deduplication; end
  def id; end
  def initialize(id, submitted_on, completed_on, priority, name, owner, client_ip, created_on, quality, retention, deduplication, status, no_of_entries, progress); end
  def name; end
  def no_of_entries; end
  def owner; end
  def priority; end
  def progress; end
  def quality; end
  def retention; end
  def status; end
  def submitted_on; end
end
class Verifalia::EmailValidations::Entry
  def ascii_email_address_domain_part; end
  def classification; end
  def completed_on; end
  def custom; end
  def duplicate_of; end
  def email_address; end
  def email_address_domain_part; end
  def email_address_local_part; end
  def has_international_domain_name; end
  def has_international_mailbox_name; end
  def initialize(input_data, classification, status, email_address, email_address_local_part, email_address_domain_part, has_international_mailbox_name, has_international_domain_name, is_disposable_email_address, is_role_account, is_free_email_address, syntax_failure_index, custom, duplicate_of, completed_on, ascii_email_address_domain_part, suggestions); end
  def input_data; end
  def is_disposable_email_address; end
  def is_free_email_address; end
  def is_role_account; end
  def status; end
  def suggestions; end
  def syntax_failure_index; end
end
class Verifalia::EmailValidations::WaitOptions
  def initialize(submission_wait_time, poll_wait_time, progress: nil); end
  def poll_wait_time; end
  def progress; end
  def self.default; end
  def self.no_wait; end
  def submission_wait_time; end
  def wait_for_next_poll(job); end
end
class Verifalia::EmailValidations::Request
  def callback; end
  def callback=(arg0); end
  def deduplication; end
  def deduplication=(arg0); end
  def entries; end
  def entries=(arg0); end
  def initialize(entries, quality: nil, priority: nil, deduplication: nil, name: nil, retention: nil, callback: nil); end
  def name; end
  def name=(arg0); end
  def priority; end
  def priority=(arg0); end
  def quality; end
  def quality=(arg0); end
  def retention; end
  def retention=(arg0); end
end
class Verifalia::EmailValidations::RequestEntry
  def custom; end
  def custom=(arg0); end
  def initialize(input_data, custom = nil); end
  def input_data; end
  def input_data=(arg0); end
end
class Verifalia::EmailValidations::CompletionCallback
  def initialize(url, version = nil, skip_server_certificate_validation = nil); end
  def skip_server_certificate_validation; end
  def skip_server_certificate_validation=(arg0); end
  def url; end
  def url=(arg0); end
  def version; end
  def version=(arg0); end
end
class Verifalia::EmailValidations::Client
  def delete(id); end
  def export(id, format); end
  def get(id, wait_options: nil); end
  def initialize(rest_client); end
  def submit(data, quality: nil, priority: nil, deduplication: nil, name: nil, retention: nil, completion_callback: nil, wait_options: nil); end
end
module Verifalia::EmailValidations::EntryClassification
end
module Verifalia::EmailValidations::EntryStatus
end
module Verifalia::EmailValidations::ExportedEntriesFormat
end
module Verifalia::EmailValidations::JobStatus
end
class Verifalia::EmailValidations::Progress
  def estimated_time_remaining; end
  def initialize(percentage, estimated_time_remaining); end
  def percentage; end
end
module Verifalia::Security
end
class Verifalia::Security::UsernamePasswordAuthenticator
  def authenticate(connection, request); end
  def initialize(username, password = nil); end
end
class Verifalia::Security::CertificateAuthenticator
  def authenticate(connection, request); end
  def initialize(ssl_client_cert, ssl_client_key); end
end
