# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/feedjira/all/feedjira.rbi
#
# feedjira-3.2.3

class Time
  def self.parse_safely(datetime); end
  def self.parse_string_safely(string); end
end
class Date
  def feed_utils_to_gm_time; end
  def feed_utils_to_time(dest, method); end
end
class String
  def sanitize!; end
  def sanitize; end
end
module Feedjira
  def parse(xml, parser: nil, &block); end
  def parser_for_xml(xml); end
  def self.parse(xml, parser: nil, &block); end
  def self.parser_for_xml(xml); end
  extend Feedjira::Configuration
end
module Feedjira::Configuration
  def configure; end
  def default_logger; end
  def default_parsers; end
  def logger; end
  def logger=(arg0); end
  def parsers; end
  def parsers=(arg0); end
  def reset_configuration!; end
  def self.extended(base); end
  def set_default_configuration; end
  def strip_whitespace; end
  def strip_whitespace=(arg0); end
end
module Feedjira::FeedEntryUtilities
  def [](field); end
  def []=(field, value); end
  def each; end
  def id; end
  def last_modified; end
  def parse_datetime(string); end
  def published; end
  def published=(val); end
  def sanitize!; end
  def updated=(val); end
  include Enumerable
end
module Feedjira::FeedUtilities
  def etag; end
  def etag=(arg0); end
  def find_new_entries_for(feed); end
  def last_modified; end
  def last_modified=(arg0); end
  def new_entries; end
  def new_entries=(arg0); end
  def new_entries?; end
  def new_entry?(entry, latest); end
  def sanitize_entries!; end
  def self.included(base); end
  def update_attribute(feed, name); end
  def update_from_feed(feed); end
  def updated=(arg0); end
  def updated?; end
end
module Feedjira::FeedUtilities::ClassMethods
  def parse(xml, &block); end
  def preprocess(xml); end
  def preprocess_xml; end
  def preprocess_xml=(value); end
  def strip_whitespace(xml); end
end
class Feedjira::Feed
  def self.add_common_feed_element(element_tag, options = nil); end
  def self.add_common_feed_elements(element_tag, options = nil); end
  def self.add_common_feed_entry_element(element_tag, options = nil); end
  def self.add_common_feed_entry_elements(element_tag, options = nil); end
  def self.call_on_each_feed_entry(method, *parameters); end
end
module Feedjira::RSSEntryUtilities
  def entry_id; end
  def id; end
  def self.included(mod); end
  def url; end
end
module Feedjira::AtomEntryUtilities
  def self.included(mod); end
  def title; end
  def url; end
end
module Feedjira::Parser
end
class Feedjira::Parser::GloballyUniqueIdentifier
  def guid; end
  def guid=(arg0); end
  def is_perma_link; end
  def is_perma_link=(arg0); end
  def perma_link?; end
  def url; end
  extend SAXMachine::ClassMethods
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::RSSEntry
  def add_categories(value); end
  def author; end
  def author=(arg0); end
  def categories; end
  def categories=(arg0); end
  def comments; end
  def comments=(arg0); end
  def content; end
  def content=(arg0); end
  def dc_identifier; end
  def dc_identifier=(arg0); end
  def entry_id=(arg0); end
  def image; end
  def image=(arg0); end
  def summary; end
  def summary=(arg0); end
  def title; end
  def title=(arg0); end
  def updated; end
  def url=(arg0); end
  extend SAXMachine::ClassMethods
  include Feedjira::FeedEntryUtilities
  include Feedjira::RSSEntryUtilities
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::RSSImage
  def description; end
  def description=(arg0); end
  def height; end
  def height=(arg0); end
  def link; end
  def link=(arg0); end
  def title; end
  def title=(arg0); end
  def url; end
  def url=(arg0); end
  def width; end
  def width=(arg0); end
  extend SAXMachine::ClassMethods
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::RSS
  def add_hubs(value); end
  def description; end
  def description=(arg0); end
  def entries; end
  def entries=(arg0); end
  def feed_url; end
  def feed_url=(arg0); end
  def hubs; end
  def hubs=(arg0); end
  def image; end
  def image=(arg0); end
  def language; end
  def language=(arg0); end
  def last_built; end
  def last_built=(arg0); end
  def self.able_to_parse?(xml); end
  def title; end
  def title=(arg0); end
  def ttl; end
  def ttl=(arg0); end
  def url; end
  def url=(arg0); end
  def version; end
  def version=(arg0); end
  extend Feedjira::FeedUtilities::ClassMethods
  extend SAXMachine::ClassMethods
  include Feedjira::FeedUtilities
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::AtomEntry
  def add_categories(value); end
  def add_links(value); end
  def author; end
  def author=(arg0); end
  def categories; end
  def categories=(arg0); end
  def content; end
  def content=(arg0); end
  def entry_id; end
  def entry_id=(arg0); end
  def image; end
  def image=(arg0); end
  def links; end
  def links=(arg0); end
  def raw_title; end
  def raw_title=(arg0); end
  def summary; end
  def summary=(arg0); end
  def title=(arg0); end
  def title_type; end
  def title_type=(arg0); end
  def updated; end
  def url=(arg0); end
  extend SAXMachine::ClassMethods
  include Feedjira::AtomEntryUtilities
  include Feedjira::FeedEntryUtilities
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::Atom
  def add_hubs(value); end
  def add_links(value); end
  def description; end
  def description=(arg0); end
  def entries; end
  def entries=(arg0); end
  def feed_url; end
  def feed_url=(arg0); end
  def hubs; end
  def hubs=(arg0); end
  def icon; end
  def icon=(arg0); end
  def links; end
  def links=(arg0); end
  def self.able_to_parse?(xml); end
  def self.preprocess(xml); end
  def title; end
  def title=(arg0); end
  def url; end
  def url=(arg0); end
  extend Feedjira::FeedUtilities::ClassMethods
  extend SAXMachine::ClassMethods
  include Feedjira::FeedUtilities
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Preprocessor
  def content_nodes; end
  def doc; end
  def initialize(xml); end
  def process_content; end
  def raw_html(node); end
  def to_xml; end
end
class Feedjira::Parser::RSSFeedBurnerEntry
  def add_categories(value); end
  def author; end
  def author=(arg0); end
  def categories; end
  def categories=(arg0); end
  def comments; end
  def comments=(arg0); end
  def content; end
  def content=(arg0); end
  def dc_identifier; end
  def dc_identifier=(arg0); end
  def entry_id=(arg0); end
  def image; end
  def image=(arg0); end
  def orig_link; end
  def orig_link=(arg0); end
  def summary; end
  def summary=(arg0); end
  def title; end
  def title=(arg0); end
  def updated; end
  def url; end
  def url=(arg0); end
  extend SAXMachine::ClassMethods
  include Feedjira::FeedEntryUtilities
  include Feedjira::RSSEntryUtilities
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::RSSFeedBurner
  def add_hubs(value); end
  def description; end
  def description=(arg0); end
  def entries; end
  def entries=(arg0); end
  def feed_url; end
  def feed_url=(arg0); end
  def hubs; end
  def hubs=(arg0); end
  def last_built; end
  def last_built=(arg0); end
  def self.able_to_parse?(xml); end
  def title; end
  def title=(arg0); end
  def url; end
  def url=(arg0); end
  extend Feedjira::FeedUtilities::ClassMethods
  extend SAXMachine::ClassMethods
  include Feedjira::FeedUtilities
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::PodloveChapter
  def image; end
  def image=(arg0); end
  def start; end
  def start_ntp; end
  def start_ntp=(arg0); end
  def title; end
  def title=(arg0); end
  def url; end
  def url=(arg0); end
  extend SAXMachine::ClassMethods
  include Feedjira::FeedEntryUtilities
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::ITunesRSSOwner
  def email; end
  def email=(arg0); end
  def name; end
  def name=(arg0); end
  extend Feedjira::FeedUtilities::ClassMethods
  extend SAXMachine::ClassMethods
  include Feedjira::FeedUtilities
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::ITunesRSSCategory
  def each_path(ancestors = nil, &block); end
  def each_subcategory(&block); end
  def itunes_categories; end
  def itunes_categories=(arg0); end
  def text; end
  def text=(arg0); end
  extend SAXMachine::ClassMethods
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::ITunesRSSItem
  def add_categories(value); end
  def author; end
  def author=(arg0); end
  def categories; end
  def categories=(arg0); end
  def chapters; end
  def comments; end
  def comments=(arg0); end
  def content; end
  def content=(arg0); end
  def dc_identifier; end
  def dc_identifier=(arg0); end
  def enclosure_length; end
  def enclosure_length=(arg0); end
  def enclosure_type; end
  def enclosure_type=(arg0); end
  def enclosure_url; end
  def enclosure_url=(arg0); end
  def entry_id=(arg0); end
  def image; end
  def image=(arg0); end
  def itunes_author; end
  def itunes_author=(arg0); end
  def itunes_block; end
  def itunes_block=(arg0); end
  def itunes_closed_captioned; end
  def itunes_closed_captioned=(arg0); end
  def itunes_duration; end
  def itunes_duration=(arg0); end
  def itunes_episode; end
  def itunes_episode=(arg0); end
  def itunes_episode_type; end
  def itunes_episode_type=(arg0); end
  def itunes_explicit; end
  def itunes_explicit=(arg0); end
  def itunes_image; end
  def itunes_image=(arg0); end
  def itunes_keywords; end
  def itunes_keywords=(arg0); end
  def itunes_order; end
  def itunes_order=(arg0); end
  def itunes_season; end
  def itunes_season=(arg0); end
  def itunes_subtitle; end
  def itunes_subtitle=(arg0); end
  def itunes_summary; end
  def itunes_summary=(arg0); end
  def itunes_title; end
  def itunes_title=(arg0); end
  def raw_chapters; end
  def raw_chapters=(arg0); end
  def summary; end
  def summary=(arg0); end
  def title; end
  def title=(arg0); end
  def updated; end
  def url=(arg0); end
  extend SAXMachine::ClassMethods
  include Feedjira::FeedEntryUtilities
  include Feedjira::RSSEntryUtilities
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::ITunesRSS
  def _itunes_categories; end
  def _itunes_categories=(arg0); end
  def copyright; end
  def copyright=(arg0); end
  def description; end
  def description=(arg0); end
  def entries; end
  def entries=(arg0); end
  def feed_url; end
  def feed_url=(arg0); end
  def image; end
  def image=(arg0); end
  def itunes_author; end
  def itunes_author=(arg0); end
  def itunes_block; end
  def itunes_block=(arg0); end
  def itunes_categories; end
  def itunes_category_paths; end
  def itunes_complete; end
  def itunes_complete=(arg0); end
  def itunes_explicit; end
  def itunes_explicit=(arg0); end
  def itunes_image; end
  def itunes_image=(arg0); end
  def itunes_keywords; end
  def itunes_keywords=(arg0); end
  def itunes_new_feed_url; end
  def itunes_new_feed_url=(arg0); end
  def itunes_owners; end
  def itunes_owners=(arg0); end
  def itunes_subtitle; end
  def itunes_subtitle=(arg0); end
  def itunes_summary; end
  def itunes_summary=(arg0); end
  def itunes_type; end
  def itunes_type=(arg0); end
  def language; end
  def language=(arg0); end
  def last_built; end
  def last_built=(arg0); end
  def managing_editor; end
  def managing_editor=(arg0); end
  def self.able_to_parse?(xml); end
  def title; end
  def title=(arg0); end
  def ttl; end
  def ttl=(arg0); end
  def url; end
  def url=(arg0); end
  def version; end
  def version=(arg0); end
  extend Feedjira::FeedUtilities::ClassMethods
  extend SAXMachine::ClassMethods
  include Feedjira::FeedUtilities
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::AtomFeedBurnerEntry
  def add_categories(value); end
  def add_links(value); end
  def author; end
  def author=(arg0); end
  def categories; end
  def categories=(arg0); end
  def content; end
  def content=(arg0); end
  def entry_id; end
  def entry_id=(arg0); end
  def image; end
  def image=(arg0); end
  def links; end
  def links=(arg0); end
  def orig_link; end
  def orig_link=(arg0); end
  def raw_title; end
  def raw_title=(arg0); end
  def summary; end
  def summary=(arg0); end
  def title=(arg0); end
  def title_type; end
  def title_type=(arg0); end
  def updated; end
  def url; end
  def url=(arg0); end
  extend SAXMachine::ClassMethods
  include Feedjira::AtomEntryUtilities
  include Feedjira::FeedEntryUtilities
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::AtomFeedBurner
  def add_hubs(value); end
  def description; end
  def description=(arg0); end
  def entries; end
  def entries=(arg0); end
  def feed_url; end
  def feed_url=(arg0); end
  def feed_url_atom10_link; end
  def feed_url_atom10_link=(arg0); end
  def feed_url_link; end
  def feed_url_link=(arg0); end
  def hubs; end
  def hubs=(arg0); end
  def self.able_to_parse?(xml); end
  def self.preprocess(xml); end
  def title; end
  def title=(arg0); end
  def url; end
  def url=(arg0); end
  def url_notype; end
  def url_notype=(arg0); end
  def url_text_html; end
  def url_text_html=(arg0); end
  extend Feedjira::FeedUtilities::ClassMethods
  extend SAXMachine::ClassMethods
  include Feedjira::FeedUtilities
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::AtomGoogleAlertsEntry
  def add_categories(value); end
  def add_links(value); end
  def author; end
  def author=(arg0); end
  def categories; end
  def categories=(arg0); end
  def content; end
  def content=(arg0); end
  def entry_id; end
  def entry_id=(arg0); end
  def image; end
  def image=(arg0); end
  def links; end
  def links=(arg0); end
  def raw_title; end
  def raw_title=(arg0); end
  def summary; end
  def summary=(arg0); end
  def title=(arg0); end
  def title_type; end
  def title_type=(arg0); end
  def updated; end
  def url; end
  def url=(arg0); end
  extend SAXMachine::ClassMethods
  include Feedjira::AtomEntryUtilities
  include Feedjira::FeedEntryUtilities
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::AtomGoogleAlerts
  def add_links(value); end
  def description; end
  def description=(arg0); end
  def entries; end
  def entries=(arg0); end
  def feed_url; end
  def feed_url=(arg0); end
  def links; end
  def links=(arg0); end
  def self.able_to_parse?(xml); end
  def self.preprocess(xml); end
  def title; end
  def title=(arg0); end
  def url; end
  def url=(arg0); end
  extend Feedjira::FeedUtilities::ClassMethods
  extend SAXMachine::ClassMethods
  include Feedjira::FeedUtilities
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::GoogleDocsAtomEntry
  def add_categories(value); end
  def add_links(value); end
  def author; end
  def author=(arg0); end
  def categories; end
  def categories=(arg0); end
  def checksum; end
  def checksum=(arg0); end
  def content; end
  def content=(arg0); end
  def entry_id; end
  def entry_id=(arg0); end
  def image; end
  def image=(arg0); end
  def links; end
  def links=(arg0); end
  def original_filename; end
  def original_filename=(arg0); end
  def raw_title; end
  def raw_title=(arg0); end
  def suggested_filename; end
  def suggested_filename=(arg0); end
  def summary; end
  def summary=(arg0); end
  def title=(arg0); end
  def title_type; end
  def title_type=(arg0); end
  def updated; end
  def url=(arg0); end
  extend SAXMachine::ClassMethods
  include Feedjira::AtomEntryUtilities
  include Feedjira::FeedEntryUtilities
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::GoogleDocsAtom
  def add_links(value); end
  def description; end
  def description=(arg0); end
  def entries; end
  def entries=(arg0); end
  def feed_url; end
  def feed_url=(arg0); end
  def links; end
  def links=(arg0); end
  def self.able_to_parse?(xml); end
  def title; end
  def title=(arg0); end
  def url; end
  def url=(arg0); end
  extend Feedjira::FeedUtilities::ClassMethods
  extend SAXMachine::ClassMethods
  include Feedjira::FeedUtilities
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::AtomYoutubeEntry
  def add_categories(value); end
  def add_links(value); end
  def author; end
  def author=(arg0); end
  def categories; end
  def categories=(arg0); end
  def content; end
  def content=(arg0); end
  def entry_id; end
  def entry_id=(arg0); end
  def image; end
  def image=(arg0); end
  def links; end
  def links=(arg0); end
  def media_height; end
  def media_height=(arg0); end
  def media_star_average; end
  def media_star_average=(arg0); end
  def media_star_count; end
  def media_star_count=(arg0); end
  def media_thumbnail_height; end
  def media_thumbnail_height=(arg0); end
  def media_thumbnail_url; end
  def media_thumbnail_url=(arg0); end
  def media_thumbnail_width; end
  def media_thumbnail_width=(arg0); end
  def media_title; end
  def media_title=(arg0); end
  def media_type; end
  def media_type=(arg0); end
  def media_url; end
  def media_url=(arg0); end
  def media_views; end
  def media_views=(arg0); end
  def media_width; end
  def media_width=(arg0); end
  def raw_title; end
  def raw_title=(arg0); end
  def summary; end
  def summary=(arg0); end
  def title=(arg0); end
  def title_type; end
  def title_type=(arg0); end
  def updated; end
  def url=(arg0); end
  def youtube_channel_id; end
  def youtube_channel_id=(arg0); end
  def youtube_video_id; end
  def youtube_video_id=(arg0); end
  extend SAXMachine::ClassMethods
  include Feedjira::AtomEntryUtilities
  include Feedjira::FeedEntryUtilities
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::AtomYoutube
  def author; end
  def author=(arg0); end
  def entries; end
  def entries=(arg0); end
  def feed_url; end
  def feed_url=(arg0); end
  def self.able_to_parse?(xml); end
  def title; end
  def title=(arg0); end
  def url; end
  def url=(arg0); end
  def youtube_channel_id; end
  def youtube_channel_id=(arg0); end
  extend Feedjira::FeedUtilities::ClassMethods
  extend SAXMachine::ClassMethods
  include Feedjira::FeedUtilities
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::JSONFeed
  def description; end
  def entries; end
  def expired; end
  def favicon; end
  def feed_url; end
  def icon; end
  def initialize(json); end
  def json; end
  def language; end
  def parse_items(items); end
  def self.able_to_parse?(json); end
  def self.parse(json); end
  def title; end
  def url; end
  def version; end
  extend Feedjira::FeedUtilities::ClassMethods
  extend SAXMachine::ClassMethods
  include Feedjira::FeedUtilities
  include SAXMachine
  include SAXMachine::InstanceMethods
end
class Feedjira::Parser::JSONFeedItem
  def author; end
  def author_name(author_obj); end
  def banner_image; end
  def categories; end
  def content; end
  def entry_id; end
  def external_url; end
  def image; end
  def initialize(json); end
  def json; end
  def parse_content(content_html, content_text); end
  def parse_published(date_published); end
  def parse_updated(date_modified); end
  def published; end
  def summary; end
  def title; end
  def updated; end
  def url; end
  include Feedjira::FeedEntryUtilities
end
class Feedjira::NoParserAvailable < StandardError
end
